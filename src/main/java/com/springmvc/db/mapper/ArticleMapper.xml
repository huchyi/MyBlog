<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.db.mapper.ArticleMapper">
    <resultMap id="article" type="com.springmvc.db.model.ArticleModel">
    </resultMap>
    <insert id="insertOne" parameterType="com.springmvc.db.model.ArticleModel">
        insert into article (article_id,userid,username,title,describes,content,img_url,create_time,is_private)
        values (#{article_id},#{userid},#{username},#{title},#{describes},#{content},#{img_url},now(),#{is_private})
    </insert>

    <update id="updateOne" parameterType="com.springmvc.db.model.ArticleModel">
        UPDATE article SET article_id=#{article_id},title=#{title},describes=#{describes},content=#{content},
        img_url=#{img_url},is_private=#{is_private} WHERE id = #{id} AND userid = #{userid}
    </update>

    <update id="updateChangeIsPrivate" parameterType="com.springmvc.db.model.ArticleModel">
        UPDATE article SET is_private=#{is_private} WHERE id = #{id} AND userid = #{userid}
    </update>

    <update id="updateReadTimes" parameterType="int">
         UPDATE article SET read_times=read_times +1 WHERE id = #{id}
    </update>

    <select id="getArticleLast" parameterType="int" resultMap="article">
          select
           id,
           username,
           article_id,
           title,
           describes,
           content,
           create_time,
           is_private,
           read_times from article order by id desc limit 1
    </select>

    <select id="getArticleById" parameterType="int" resultMap="article">
    select id,
           userid,
           username,
           article_id,
           title,
           describes,
           content,
           create_time,
           is_private,
           read_times  from article where id=#{id}
    </select>
    <select id="getArticleByUserid" parameterType="String" resultMap="article">
        select id,
           username,
           article_id,
           title,
           describes,
           create_time,
           is_private,
           read_times  from article where userid=#{userid} order by id desc
    </select>

    <select id="getArticleAll" resultMap="article">
        select id,
           username,
           article_id,
           title,
           describes,
           content,
           create_time,
           is_private,
           read_times  from article order by id desc
    </select>

    <select id="getPageCount" resultType="int">
        select COUNT(*) from article WHERE is_private=FALSE
    </select>

    <select id="queryPageNumData" parameterType="map" resultMap="article">
        <!--      select * from article order by id desc limit #{pageNum} ,10
        select * from article order by id desc BETWEEN #{startNum} AND #{endNum}
             SELECT * FROM article WHERE id > =(select id from article limit #{startNum}, 1) limit 10-->
        <!--select * from article WHERE id  BETWEEN #{startNum} AND #{endNum} ORDER BY id DESC-->
        SELECT id,
        username,
        article_id,
        title,
        describes,
        create_time,
        is_private,
        read_times  FROM article WHERE id >=(select id from article limit #{startNum}, 1) AND is_private=FALSE limit
        #{size}
    </select>
</mapper>
